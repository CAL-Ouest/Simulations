import os
import numpy as np
import tempfile
import datetime
import pydicom
from pydicom.dataset import Dataset, FileDataset
from matplotlib import pyplot

def normalize(v):
    norm = np.amax(v)
    #print "Norm: ", norm
    #print "Max: ", np.amax(v)
    if norm == 0: 
       return v
    result= v*100 / norm
    #print "Max: ", np.amax(result)
    return result

print '********************************************************************************'
print '                           Now creating pixel array'
print '********************************************************************************'
print ''
dir_path = os.path.dirname(os.path.realpath(__file__))
dirs= os.listdir(dir_path) 
print 'Locate simulation file\nIn this folder there are: \n'
for file in dirs:
   print file

simpath=raw_input("\nPut in folder containing the data \n")

print "\nLoad ascii data\nIn this folder there are: \n"
dirs= os.listdir(dir_path + '/' + simpath) 
for file in dirs:
   print file
filename = raw_input("\nEnter ascii file name without ending: ")

Rows=int(raw_input("Row number (y-direction): "))
Columns=int(raw_input("Column number (x-direction): "))
a=np.zeros([Rows,Columns])

for i in range(1,101):
    simfile = dir_path + '/' + simpath + '/' + filename + "_%s-Dose.dat" % (i)
    print "Open file: ", simfile
    z=np.loadtxt(simfile, skiprows=6, dtype="float")
    print z.shape
    a=np.add(a,z)
    print a.shape

p = normalize(a.astype(np.float16))

print ''
print '********************************************************************************'
print '                                Write file'
print '********************************************************************************'
print ''
savepath = simpath + '/' + filename + "ACCUM" +".opg"
f = open(savepath, 'w')
f.write('<opimrtascii>\n')
f.write('\n')
f.write('<asciiheader>\n')
f.write('File Version:       3\n')
f.write('Separator:          ","\n')
f.write('Workspace Name:     \n')
f.write('File Name:          \n')
f.write('Image Name:' + filename +'\n')
f.write('Radiation Type:  \n ')  
f.write('Energy:             0.0 MeV\n')
f.write('SSD:                1000.0 mm\n')
f.write('SID:                1000.0 mm\n')
f.write('Field Size Cr:      100.0 mm\n')
f.write('Field Size In:      100.0 mm\n')
f.write('Data Type:          Relative\n')
f.write('Data Factor:        1.000\n')
f.write('Data Unit:          1/10 %\n')
f.write('Length Unit:        mm\n')
f.write('Plane:              XY\n')
f.write('No. of Columns:     ' + str(Columns) +    '\n')
f.write('No. of Rows:        ' + str(Rows) +    '\n')
f.write('Number of Bodies:   1\n')
f.write('Operators Note:     \n')
f.write('</asciiheader>\n')
f.write('\n')
f.write('\n')
f.write('<asciibody>\n')
f.write('Plane Position:     0.0 mm\n')
f.write('\n')
f.write('X[mm] ,-150.0,-149.5,-149.0,-148.5,-148.0,-147.5,-147.0,-146.5,-146.0,-145.5,-145.0,-144.5,-144.0,-143.5,-143.0,-142.5,-142.0,-141.5,-141.0,-140.5,-140.0,-139.5,-139.0,-138.5,-138.0,-137.5,-137.0,-136.5,-136.0,-135.5,-135.0,-134.5,-134.0,-133.5,-133.0,-132.5,-132.0,-131.5,-131.0,-130.5,-130.0,-129.5,-129.0,-128.5,-128.0,-127.5,-127.0,-126.5,-126.0,-125.5,-125.0,-124.5,-124.0,-123.5,-123.0,-122.5,-122.0,-121.5,-121.0,-120.5,-120.0,-119.5,-119.0,-118.5,-118.0,-117.5,-117.0,-116.5,-116.0,-115.5,-115.0,-114.5,-114.0,-113.5,-113.0,-112.5,-112.0,-111.5,-111.0,-110.5,-110.0,-109.5,-109.0,-108.5,-108.0,-107.5,-107.0,-106.5,-106.0,-105.5,-105.0,-104.5,-104.0,-103.5,-103.0,-102.5,-102.0,-101.5,-101.0,-100.5,-100.0,-99.5,-99.0,-98.5,-98.0,-97.5,-97.0,-96.5,-96.0,-95.5,-95.0,-94.5,-94.0,-93.5,-93.0,-92.5,-92.0,-91.5,-91.0,-90.5,-90.0,-89.5,-89.0,-88.5,-88.0,-87.5,-87.0,-86.5,-86.0,-85.5,-85.0,-84.5,-84.0,-83.5,-83.0,-82.5,-82.0,-81.5,-81.0,-80.5,-80.0,-79.5,-79.0,-78.5,-78.0,-77.5,-77.0,-76.5,-76.0,-75.5,-75.0,-74.5,-74.0,-73.5,-73.0,-72.5,-72.0,-71.5,-71.0,-70.5,-70.0,-69.5,-69.0,-68.5,-68.0,-67.5,-67.0,-66.5,-66.0,-65.5,-65.0,-64.5,-64.0,-63.5,-63.0,-62.5,-62.0,-61.5,-61.0,-60.5,-60.0,-59.5,-59.0,-58.5,-58.0,-57.5,-57.0,-56.5,-56.0,-55.5,-55.0,-54.5,-54.0,-53.5,-53.0,-52.5,-52.0,-51.5,-51.0,-50.5,-50.0,-49.5,-49.0,-48.5,-48.0,-47.5,-47.0,-46.5,-46.0,-45.5,-45.0,-44.5,-44.0,-43.5,-43.0,-42.5,-42.0,-41.5,-41.0,-40.5,-40.0,-39.5,-39.0,-38.5,-38.0,-37.5,-37.0,-36.5,-36.0,-35.5,-35.0,-34.5,-34.0,-33.5,-33.0,-32.5,-32.0,-31.5,-31.0,-30.5,-30.0,-29.5,-29.0,-28.5,-28.0,-27.5,-27.0,-26.5,-26.0,-25.5,-25.0,-24.5,-24.0,-23.5,-23.0,-22.5,-22.0,-21.5,-21.0,-20.5,-20.0,-19.5,-19.0,-18.5,-18.0,-17.5,-17.0,-16.5,-16.0,-15.5,-15.0,-14.5,-14.0,-13.5,-13.0,-12.5,-12.0,-11.5,-11.0,-10.5,-10.0,-9.5,-9.0,-8.5,-8.0,-7.5,-7.0,-6.5,-6.0,-5.5,-5.0,-4.5,-4.0,-3.5,-3.0,-2.5,-2.0,-1.5,-1.0,-0.5,0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0,5.5,6.0,6.5,7.0,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.0,14.5,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,25.0,25.5,26.0,26.5,27.0,27.5,28.0,28.5,29.0,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0,40.5,41.0,41.5,42.0,42.5,43.0,43.5,44.0,44.5,45.0,45.5,46.0,46.5,47.0,47.5,48.0,48.5,49.0,49.5,50.0,50.5,51.0,51.5,52.0,52.5,53.0,53.5,54.0,54.5,55.0,55.5,56.0,56.5,57.0,57.5,58.0,58.5,59.0,59.5,60.0,60.5,61.0,61.5,62.0,62.5,63.0,63.5,64.0,64.5,65.0,65.5,66.0,66.5,67.0,67.5,68.0,68.5,69.0,69.5,70.0,70.5,71.0,71.5,72.0,72.5,73.0,73.5,74.0,74.5,75.0,75.5,76.0,76.5,77.0,77.5,78.0,78.5,79.0,79.5,80.0,80.5,81.0,81.5,82.0,82.5,83.0,83.5,84.0,84.5,85.0,85.5,86.0,86.5,87.0,87.5,88.0,88.5,89.0,89.5,90.0,90.5,91.0,91.5,92.0,92.5,93.0,93.5,94.0,94.5,95.0,95.5,96.0,96.5,97.0,97.5,98.0,98.5,99.0,99.5,100.0,100.5,101.0,101.5,102.0,102.5,103.0,103.5,104.0,104.5,105.0,105.5,106.0,106.5,107.0,107.5,108.0,108.5,109.0,109.5,110.0,110.5,111.0,111.5,112.0,112.5,113.0,113.5,114.0,114.5,115.0,115.5,116.0,116.5,117.0,117.5,118.0,118.5,119.0,119.5,120.0,120.5,121.0,121.5,122.0,122.5,123.0,123.5,124.0,124.5,125.0,125.5,126.0,126.5,127.0,127.5,128.0,128.5,129.0,129.5,130.0,130.5,131.0,131.5,132.0,132.5,133.0,133.5,134.0,134.5,135.0,135.5,136.0,136.5,137.0,137.5,138.0,138.5,139.0,139.5,140.0,140.5,141.0,141.5,142.0,142.5,143.0,143.5,144.0,144.5,145.0,145.5,146.0,146.5,147.0,147.5,148.0,148.5,149.0,149.5,\n')
f.write('Y[mm]\n')
for i in range(Rows):
    index = -150.0 + i/2.0
    f.write(str(index)+',')
    for j in range(Columns):
        f.write(str(p[i,j]))
        f.write(',')
    f.write('\n')
f.write('</asciibody>\n\n\n</opimrtascii>')



#np.savetxt(savepath, a)
print "File saved as: ", savepath
